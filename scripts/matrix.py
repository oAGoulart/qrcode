import math

def print_indexes(order, check):
  for row in range(order):
    for col in range(order):
      i = row * order + col
      if i in check:
        print(f"{i:04d} ", end='')
      else:
        print("0000 ", end='')
    print("")

def dups(v):
  for e in v:
    if v.count(e) > 1:
      print(f"{e}")

def maskinfo(order):
  for i in range(15):
    if i < 8:
      index = 8*order+i
      if i > 5:
        index += 1
      #print(index)
    else:
      index = (15-i)*order+8
      if i > 8:
        index -= order
      #print(index)
    if i < 7:
      index=order*(order-i-1)+8
      print(index)
    else:
      index=order*8+order-8+i-7
      print(index)


def xorp(v, order, pattern):
  for i, e in enumerate(v):
    row = math.floor(e / order)
    col = e % order
    print(f"{row} {col} |", end='')
    if (pattern == 0):
      print(f"{(row + col) % 2 == 0},", end='')
    elif (pattern == 1):
      print(f"{row % 2 == 0},", end='')
    elif (pattern == 2):
      print(f"{col % 3 == 0},", end='')
    elif (pattern == 3):
      print(f"{(row + col) % 3 == 0},", end='')
    elif (pattern == 4):
      print(f"{(math.floor(row / 2) + math.floor(col / 3)) % 2 == 0},", end='')
    elif (pattern == 5):
      print(f"{((row * col) % 2) + ((row * col) % 3) == 0},", end='')
    elif (pattern == 6):
      print(f"{(((row * col) % 2) + ((row * col) % 3) ) % 2 == 0},", end='')
    elif (pattern == 7):
      print(f"{(((row + col) % 2) + ((row * col) % 3) ) % 2 == 0},", end='')
  print("")

v = [
  624,623,599,598,574,573,549,548,524,523,499,498,474,473,449,448,424,423,399,398,374,373,349,348,324,323,299,298,274,273,249,248,
247,246,272,271,297,296,322,321,347,346,372,371,397,396,422,421,447,446,472,471,497,496,522,521,547,546,572,571,597,596,622,621,
620,619,595,594,570,569,545,544,395,394,370,369,345,344,320,319,295,294,270,269,245,244,
243,242,268,267,293,292,318,317,343,342,368,367,393,392,543,542,568,567,593,592,618,617,
616,615,591,590,566,565,541,540,515,490,465,440,415,391,390,366,365,341,340,316,315,291,290,266,265,241,240,216,215,191,190,141,140,116,115,91,90,66,65,41,40,16,15,
14,13,39,38,64,63,89,88,114,113,139,138,189,188,214,213,239,238,264,263,289,288,314,313,339,338,364,363,389,388,414,413,439,438,464,463,489,488,514,513,539,538,564,563,589,588,614,613,
612,611,587,586,562,561,537,536,512,511,487,486,462,461,437,436,412,411,387,386,362,361,337,336,312,311,287,286,262,261,237,236,212,211,187,186,137,136,112,111,87,86,62,61,37,36,12,11,
10,9,35,34,60,59,85,84,110,109,135,134,185,184,210,209,235,234,260,259,285,284,310,309,335,334,360,359,385,384,410,409,435,434,460,459,485,484,510,509,535,534,560,559,585,584,610,609,
408,407,383,382,358,357,333,332,308,307,283,282,258,257,233,232,
230,229,255,254,280,279,305,304,330,329,355,354,380,379,405,404,
403,402,378,377,353,352,328,327,303,302,278,277,253,252,228,227,
226,225,251,250,276,275,301,300,326,325,351,350,376,375,401,400
]

print_indexes(25, v)
#dups(v)
#xorp(v, 21, 0)
#maskinfo(21)
